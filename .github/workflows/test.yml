name: Test

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log after checkout
        run: echo "✅ Checkout code completed"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Log after Node.js setup
        run: echo "✅ Node.js setup completed"

      - name: Install dependencies
        run: npm install

      - name: Log after installing dependencies
        run: echo "✅ npm install completed"

      # Uncomment if you want to run npm audit
      # - name: Run npm audit to check vulnerabilities
      #   run: npm audit --audit-level=moderate

      - name: Log after npm audit
        run: echo "✅ npm audit completed"

      - name: Build Docker image
        run: docker build -t my-app:${{ github.sha }} .

      - name: Log after Docker image build
        run: echo "✅ Docker image build completed"

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-app:${{ github.sha }}
          severity: HIGH,CRITICAL
          exit-code: 0
          format: table
          ignore-unfixed: true

      - name: Log after Trivy scan
        run: echo "✅ Trivy scan completed"

      # Start the application container
      - name: Start application container
        run: |
          docker run -d --name my-app-container -p 3000:3000 my-app:${{ github.sha }}
          # Wait for application to be ready
          sleep 30
          # Verify the application is running
          curl -f http://localhost:3000 || exit 1

      - name: Log after starting application
        run: echo "✅ Application started and verified"

      - name: Run custom action for Bruce
        uses: './'
        with:
          person: 'Bruce'

      - name: Log after custom action Bruce
        run: echo "✅ Custom action for Bruce completed"

      - name: Run custom action for Batman
        uses: './'
        with:
          person: 'Batman'

      - name: Log after custom action Batman
        run: echo "✅ Custom action for Batman completed"

      # Create ZAP directory and files
      - name: Create ZAP directory
        run: |
          mkdir -p .zap
          touch .zap/rules.tsv
          chmod 755 .zap
          chmod 644 .zap/rules.tsv

      # # ZAP Baseline Scan (faster, good for CI/CD)
      # - name: ZAP Baseline Scan
      #   uses: zaproxy/action-baseline@v0.12.0
      #   with:
      #     target: 'http://localhost:3000'
      #     cmd_options: '-a'

      # Alternative: ZAP Full Scan (more comprehensive but slower)
      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:3000'
          # rules_file_name: '.zap/rules.tsv'
          fail-action: false
          cmd_options: '-a'

      - name: Log after ZAP scan
        run: echo "✅ ZAP scan completed"

      # Clean up
      - name: Stop application container
        if: always()
        run: |
          docker stop my-app-container || true
          docker rm my-app-container || true